name: CD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  # Postgres
  MYSQL_DB: url_shortener
  MYSQL_ROOT_PASSWORD: url-shorterner-password
  # Java
  JAVA_VERSION: 1.17
  # DockerHub
  DOCKER_HUB_USERNAME: yekkhan
  DOCKER_IMAGE: yekkhan/url-shortener

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_DB: ${{ env.MYSQL_DB }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          

    steps:
      #      - uses: 8398a7/action-slack@v3
      #        with:
      #          status: ${{ job.status }}
      #          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      #          text: 'CD ongoing... :eyes:'
      #        env:
      #          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout main
        uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Write value to Properties-file
        uses: christian-draeger/write-properties@1.1.0
        with:
          path: './src/main/resources/application-prod.properties'
          property: |
            'spring.datasource.password'
            'spring.redis.password'
          value: |
            '${{ secrets.MYSQL_PASSWORD }}'
            '${{ secrets.REDIS_PASSWORD }}'

      - name: Maven Clean Package and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P jib-push-to-dockerhub \
            -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}
#      - uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#          text: ':white_check_mark: pushed amigoscode/springboot-react-fullstack:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... https://hub.docker.com/repository/docker/amigoscode/springboot-react-fullstack'
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Update and commit app version in docker-compose.yaml
#        run: |
#          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
#          echo -e "Current docker/docker-compose.yaml\n$(cat docker/docker-compose.yaml)"
#          sed -i -E 's_(yekkhan/url-shortener:)([^"]*)_\1'${BUILD_NUMBER}'_' docker/docker-compose.yaml
#          echo -e "Current docker/docker-compose.yaml\n$(cat docker/docker-compose.yaml)"
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add docker/docker-compose.yaml
#          git commit -m "new app version: ${BUILD_NUMBER}"
#          git push

#      - name: Install doctl (Digital Ocean)
#        uses: digitalocean/action-doctl@v2.1.1
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Log in to DigitalOcean Container Registry with short-lived credentials
#        run: doctl registry login --expiry-seconds 600

      - name: SSH into Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secret.SSH_HOST }} #IP address of server
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            docker pull {{ env.DOCKER_IMAGE }}
            docker run {{ env.DOCKER_IMAGE }}

#      - uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#          text: ':elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:'
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Beanstalk Deploy
#        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          region: ${{ env.AWS_REGION }}
#          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
#          application_name: ${{ env.EB_APPLICATION_NAME }}
#          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
#          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
#          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
#          wait_for_deployment: 60
#      - uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#          text: ':tada: :arrow_right: http://springbootreactfullstack-env.eba-3imjbkem.eu-west-1.elasticbeanstalk.com'
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()